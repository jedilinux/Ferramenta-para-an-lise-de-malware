#Autor: Diego Rodrigues Pereira
# usa a biblioteca PyShark para analisar um arquivo .pcap e detectar a presença de uma assinatura de malware na carga útil dos pacotes.

import pyshark
import re

# Abre o arquivo pcap
cap = pyshark.FileCapture('D:\\DIEGO\\Malware\\wireshark\\network.pcap')

# Cria listas para armazenar as evidências encontradas
usernames = []
passwords = []
extracted_files = []

# Percorre todos os pacotes do arquivo pcap
for pkt in cap:
    # Verifica se o pacote contém uma carga útil (payload)
    if hasattr(pkt, 'data'):
        # Armazena o número do pacote, o horário e a carga útil (payload) em um dicionário
        pacote = {'numero': pkt.number, 'timestamp': pkt.sniff_time, 'payload': bytes.fromhex(pkt.data.data.replace(':', ''))}
        
        # Verifica se a carga útil (payload) do pacote contém a assinatura de um malware
        if b'malware_signature' in pacote['payload']:
            # Se a carga útil contém a assinatura de um malware, imprime o número do pacote e o horário em que foi capturado
            print(f"Pacote {pacote['numero']} capturado em {pacote['timestamp']}")

        # Busca por evidências de usuário comprometido
        if re.search(b'user', pacote['payload'], re.IGNORECASE):
            usernames.append(pacote)
        
        # Busca por evidências de senhas utilizadas
        if re.search(b'pass', pacote['payload'], re.IGNORECASE):
            passwords.append(pacote)
        
        # Busca por evidências de arquivos extraídos ou armazenados na rede
        if re.search(b'content-disposition:\s*attachment', pacote['payload'], re.IGNORECASE):
            extracted_files.append(pacote)

# Imprime os resultados das buscas por evidências
print("Evidências de usuário comprometido:")
for username in usernames:
    print(f"Pacote {username['numero']} capturado em {username['timestamp']}")
    
print("Evidências de senhas utilizadas:")
for password in passwords:
    print(f"Pacote {password['numero']} capturado em {password['timestamp']}")
    
print("Evidências de arquivos extraídos ou armazenados na rede:")
for extracted_file in extracted_files:
    print(f"Pacote {extracted_file['numero']} capturado em {extracted_file['timestamp']}")

